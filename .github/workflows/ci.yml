name: Dotfiles Installation

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [macos-latest, ubuntu-latest] # Remove macos since it's expensive to run on GA
        os: [ubuntu-latest]

    steps:
      - name: Clean up installed software
        if: matrix.os == 'macos-latest'
        run: |
          brew uninstall --force $(brew list)
          # brew cask uninstall --force $(brew list --cask)
          brew cask uninstall --force firefox google-chrome
          brew cleanup --prune-prefix
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall.sh)"
          rm -rf "$NVM_DIR"

      - name: Download and install available system updates
        if: matrix.os == 'macos-latest'
        run: |
          sudo softwareupdate -i -a

      - name: Clone this repository
        uses: actions/checkout@v2

      - name: Install using Makefile
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            make
          else
            sudo make
          fi

      - name: Verify runcom setup
        run: source $HOME/.bash_profile

      - name: Run tests
        if: matrix.os == 'macos-latest'
        run: make test
  release:
    needs: [install]
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GH_TOKEN }}

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Create a new release
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - run: yarn
      - run: git config --global user.name "daniel-trevino"
      - run: git config --global user.email 'daniel-trevino@users.noreply.github.com'
      - run: yarn semantic-release
